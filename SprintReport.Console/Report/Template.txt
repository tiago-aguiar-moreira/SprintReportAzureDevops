<html>
<head>
    <meta charset="UTF-8">
    <!-- <title>Document</title> -->
    <script src="Chart.min.js"></script>
</head>
<body>
    <div style="width:75%;">
		<canvas id="canvas"></canvas>
	</div>
	
	<script>
		var lineChartData = {
			labels: [{{labels}}], // Label for y axis
			datasets: [{
				label: 'Horas atribu√≠das',
				borderColor: window.chartColors.red,
				backgroundColor: window.chartColors.red,
				fill: false,
				data: [{{currentWork}}],
				yAxisID: 'y-axis-1'
			}, {
				label: 'Horas livres',
				borderColor: window.chartColors.blue,
				backgroundColor: window.chartColors.blue,
				fill: false,
				data: [{{currentCapacity}}],
				yAxisID: 'y-axis-2'
			}]
		};

		window.onload = function() {
			var ctx = document.getElementById('canvas').getContext('2d');
            
			window.myLine = Chart.Line(ctx, {
				data: lineChartData,
				options: {
					responsive: true,
					hoverMode: 'index',
					stacked: false,
					title: {
						display: true,
						text: '{{title}}'
					},
					scales: {
						yAxes: [{
							type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
							display: true,
							position: 'left',
							id: 'y-axis-1',
						}, {
							type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
							display: true,
							position: 'right',
							id: 'y-axis-2',

							// grid line settings
							gridLines: {
								drawOnChartArea: false, // only want the grid lines for one axis to show up
							},
						}],
					}
				}
			});
		};
	</script>
</body>
</html>